JavaScript - 프로그래밍 언어 (if, for, 변수 배열 ~ 사용가능)
HTML - 마크업 언어
CSS - 스타일 시트 언어

AJAX - Asychronous JavaScript And XML
변화를 HTML, 즉 전체를 새로고침하는 것이 아닌
그 부분만 비동기적으로 변화줌.

jQuery - 아주 쉽게 자주쓰는 JavaScript 소스코드들을 모아둔 Library

Node.js - 컴퓨터에 설치하여 쓰는 JavaScrpit

★ JavaScript ★

JavaScript 중요도
1. function 함수
2. object 객체
3. array 배열

- console.log() -> print하는 명령어

선언 (declare / declaration) 배정 (asing / asignment)
변수는 메모리의 주소 (변수를 쓰는 이유는 메모리 주소를 외우고 다니기 힘드니까)

a=1; 처럼 값을 집어넣는 과정은 초기화 (initialize / initialized) 라고 함.

JS 의 변수에는 var, let, const 가 있다.
JavaScript 에서는 type(자료형)을 붙이지 않음
var 는 deprecated (더 이상 사용되지 않는) 쓰지마!

1순위는 const - 변경 불가능함, 배열과 객체는 바꿀 수 있음 [상수 변수 (constant variable)]

2순위는 let - 변경 가능함. 대부분의 변수는 const로 하고 i, idx, cnt, flag 처럼 변화가 필요한 변수에는 let 사용.

함수 레벨 스코프 : 함수 안에서만 변수 사용가능, 밖에서는 정의 안됨. (var)
블록 레벨 스코프 :  블록 { } 내에서만 변수 사용 가능, 마찬가지로 밖에선 정의 안됨. (let, const) -> 더 안전하다

※ 데이터 타입
원시 자료형 타입
- number, string, boolean, null, undefined
null - 값이 비어있다고 명시하는 것, undefined - 아무 값도 할당받지 않은 상태, 데이터가 있을 줄 알았는데 없으면 undefined
참조 자료형(객체) 타입
- Array/Object/Function 은 모두 객체로 취급
 Array - []로 표기한다, idx 사용 가능 ex) const a = [1, 2, 3, 4] 

※ 함수
기본적으로 C언어와 비슷함
function "함수명"() { ~ } / 함수명은 소문자로 시작(카멜 표기)해야함.

배열과 객체는 함수 안에서도 변경 가능 / 쓸때는 차라리 배열과 객체를 전역으로 사용(가장 맨 위에 선언)해라

JavaScript 에서 함수는 변수다. 함수도 하나의 파라미터로 들어갈 수 있다. -> 콜백의 개념
ex) const sampleFunc = function(){ ~~ }; 람다식 (lambda expression)
함수의 재사용은 〃선택 사항〃이다.

변수 호이스팅 - 선언되기 전에 변수가 사용되는 것 (var은 undefiend 출력, let-const는 error가 남)
함수 호이스팅 - 함수 선언식( function 으로 정석 선언 )은 함수 호이스팅이 발생 -> 정상적으로 출력
                    함수 표현식( 함수를 변수에 넣는 것 )은 변수 호이스팅이 발생 -> undefined or error 가 남

prompt - 입력받는 명령어 ex) const txt = prompt("입력 멘트"); alert, console.log 둘 다 출력 가능

★ ECMAScript ( ES ) ★ 외워두자 !
JavaScript 언어의 표준 명세서 ( ECMAScript는 JavaScript가 아님, Script 언어에 대한 표준 )
현재 ES13이 최신이지만, ES6 당시 혁신적인 변화로 인해 ES6 이후를 "모던 JavaScript"라고 표현

객체(object)는 키(key)와 값(value)로 이루어진 프로퍼티(property. 속성)의 모음이다.
객체 안에서 순서는 의미가 없다 (job :~ , age :~ , name :~ == name : ~, age:~ , job:~ 구성된 속성이 같으면 순서가 달라도 같음)
value 값으로 함수, 배열, 객체까지도 가능하다. / 객체 안에 있는 함수 -> 메서드

string 객체 '+'로 합치기 가능, "문자열".length 로 길이 출력 가능

C언어차람 비교연산자 ( <=, <, >, >= ) 같음

★ ===, !== ★ 이걸로 사용하자 <==, != 로 사용하면 type이 달라도 true가 나옴>

C언어와 반복문 ( for, while ) 동일 <let은 반복문에서만 쓰세요>

배열과 객체는 const여도 수정, 변경 가능!
'array명'.push(값) 하면 추가 가능 (python에서 append 기능)
배열 a와 배열 b가 있다면 a.concat(b) (b.concat(a)도 같음) 으로 두 개 합치기 가능 !
배열 '+'연산은 그냥 붙어나옴. 자연스러운 배열을 만들기 위해선 concat() 사용~

DOM (Document Object Model) : HTML 문서의 구조적 표현 방법 , 요소들을 Tree 구조로 표현

HTML에서 JS쓰려면 body 끝나는 태그 바로 위에 사용 or head에 선언하고 script "defer" 를 적어준다. (앞에 방법 사용하자 !)

QuerySelector : DOM 영역 안에 딱 "1개"만 선택!
QuerySelectorAll : DOM 영역의 것들을 "Nodelist"로 가져옴

Event 구현하는 방법
1. 클래스 이름이나 id 를 queryselcetor로 가져와서 변수 선언
2. 선언된 변수.addEventListener() 선언 ()안에는 'event', 실행할함수이름 넣기!!

콜백 함수 - 파라미터로 들어가는 함수 (여기서 함수는 함수값이 아니라 함수 그 자체가 들어감)

button 이 아니어도 click evnet 사용 가능 ~